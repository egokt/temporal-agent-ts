services:
  db:
    container_name: temporal-agent-example-db
    image: postgres:16
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U temporal -d temporal']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  temporal-server:
    container_name: temporal-agent-example-temporal-server
    image: temporalio/auto-setup:1
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_SEEDS: temporal-agent-example-db
      DB: postgres12
      DB_PORT: 5432
      DBNAME: temporal # this is the default
      POSTGRES_USER: temporal
      POSTGRES_PWD: temporal
      VISIBILITY_POSTGRES_SEEDS: temporal-agent-example-db
      VISIBILITY_DBNAME: temporal_visibility # this is the default
      VISIBILITY_POSTGRES_USER: temporal
      VISIBILITY_POSTGRES_PWD: temporal

  temporal-ui:
    container_name: temporal-agent-example-temporal-ui
    image: temporalio/ui:2.40.0
    depends_on:
      temporal-server:
        condition: service_started
      db:
        condition: service_healthy
    ports:
      - 8080:8080
    environment:
      TEMPORAL_ADDRESS: temporal-server:7233

  temporal-worker-ts:
    container_name: temporal-agent-ts-example-temporal-worker
    image: node:22-slim
    command: npm run start:watch
    depends_on:
      temporal-server:
        condition: service_started
    volumes:
      - ./temporal-worker:/usr/src/temporal-worker
    working_dir: /usr/src/temporal-worker
    environment:
      TEMPORAL_SERVER_HOST: temporal-server
      TEMPORAL_SERVER_PORT: 7233

  api:
    image: node:22-slim
    container_name: temporal-agent-ts-example-api
    depends_on:
      temporal-server:
        condition: service_started
    ports:
      - '3000:3000'
    volumes:
      - ./api:/usr/src/api
    working_dir: /usr/src/api
    command: npm run start:watch
    environment:
      TEMPORAL_SERVER_HOST: temporal-server
      TEMPORAL_SERVER_PORT: 7233
