# How to use this workflow:
# 1. Copy this file to your repo's .github/workflows/ directory.
#    DO NOT symlink. Github Actions does not support symlinks.
# 2. Update the name at the top of the file.
# 3. Update the PACKAGE_PATH environment variables below.
#    * The PACKAGE_PATH should point to the directory where your package.json file is located,
#      relative to your repo's root.
# 4. If your package is published to GitHub Packages or it uses private dependencies
#    from GitHub Packages, uncomment the PACKAGE_REGISTRY and PACKAGE_SCOPE environment
#    variables below, and the corresponding lines in the setup-node step.
# 5. If your package uses private dependencies from GitHub Packages, uncomment the
#    "Configure npm authentication" step below.

name: Temporal-Agent-TS - test example/api

# NOTE: env context is only available in the jobs context below.
env:
  # Update this to point to the directory where your package.json file is located,
  # relative to your repo's root.
  # This only applies to the jobs section.
  # You must also manually update the "on" section below.
  PACKAGE_PATH: 'example/api'

on:
  push:
    branches: ['main']
    paths:
      # replace this with <value of PACKAGE_PATH>/**
      # Do not use ${{ env.PACKAGE_PATH }} here, as it won't be resolved
      - 'example/api/**'
  pull_request:
    branches: ['main']
    paths:
      # replace this with <value of PACKAGE_PATH>/**
      # Do not use ${{ env.PACKAGE_PATH }} here, as it won't be resolved
      - 'example/api/**'

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version:
          # Versions of Node.js to test against. Modify as needed.
          - 22

    steps:
      - name: Checkout full repository
        if: ${{ env.PACKAGE_PATH == '.' }}
        uses: actions/checkout@v4

      - name: Sparse checkout only the package path
        if: ${{ env.PACKAGE_PATH != '.' }}
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            ${{ env.PACKAGE_PATH }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ${{ env.PACKAGE_PATH }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.PACKAGE_PATH }}
        # Skip post-install scripts here with --ignore-scripts, as a malicious
        # script could steal auth tokens.
        run: npm ci --ignore-scripts
        # UPDATE THE ENVIRONMENT VARIABLES BELOW AS NEEDED *********************
        # If you are using npm repositories that require authentication,
        # uncomment the following env block and provide any needed
        # authentication token environment variables.
        # NOTE: We don't use GITHUB_ENV to pass these variables to later steps
        # because we don't want to risk leaking them to other steps.
        # env:
        #   NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   PRIVATE_TOKEN_FOR_ANOTHER_SCOPE: ${{ secrets.PRIVATE_TOKEN_FOR_ANOTHER_SCOPE }}
        #   PRIVATE_TOKEN_FOR_YET_ANOTHER_SCOPE: ${{ secrets.PRIVATE_TOKEN_FOR_YET_ANOTHER_SCOPE }}

      - name: Build
        run: npm run build
        working-directory: ${{ env.PACKAGE_PATH }}

      - name: Run tests and checks
        run: npm run ci:check
        working-directory: ${{ env.PACKAGE_PATH }}
